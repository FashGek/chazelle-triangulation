#!/usr/bin/python
# Auto generates typedefs for const pointers and references
# Taylor Clifton - May 2013

import sys

input_filename  = "types"
output_filename = "typedefs.h"

try:
	with open(input_filename, 'r') as input_file:
                with open(output_filename, 'w') as header_file:
                        header_file.write("// THIS FILE WAS AUTOGENERATED BY typedefs.py\n")
                        header_file.write("// DO NOT MODIFY\n")
                        for type_name in input_file:
                                type_name = type_name.strip()
                                if type_name:
                                        header_file.write("struct %s;\n" % (type_name))
                                        header_file.write("typedef %s const* %sCP;\n" % (type_name, type_name))
                                        header_file.write("typedef %s const& %sCR;\n" % (type_name, type_name))
                                        header_file.write("typedef %s*       %sP;\n"  % (type_name, type_name))
                                        header_file.write("typedef %s&       %sR;\n"  % (type_name, type_name))
                                        header_file.write("\n")

except IOError:
        print "'%s' does not exist!" % (input_filename)
